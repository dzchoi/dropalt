#pragma once

#include "lua.hpp"              // for status_t



namespace lua {

// This static class provides Lua REPL functionality.
// Note: This class is included in the build only when ENABLE_LUA_REPL is true.
class repl {
public:
    static void start();

    static void stop() {}

    // Execute each pre-compiled Lua code chunk received from the host.
    // ( -- )
    static void execute();

private:
    constexpr repl() =delete;  // Ensure a static class

    // Check if 'status' is OK. If true, print all values on the stack. Otherwise, print
    // the error message located at the top of the stack, assuming the error object is a
    // string, either generated by Lua or 'msghandler'.
    static void report(status_t status);

    // Respond to the host with the execution status.
    static void respond(status_t status);
};

}
